---
#Many thanks to: https://github.com/geerlingguy/ansible-role-mysql/blob/master/tasks/replication.yml
- name: Ensure replication user exists on master.
  mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('%') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv | default('*.*:REPLICATION SLAVE') }}"
    state: present
  with_items: "{{ freebsd_mysql_replication_user }}"
  when: >
    (freebsd_mysql_replication_role == 'master')
    and freebsd_mysql_replication_user
    and (freebsd_mysql_replication_master != '')

- name: Check slave replication status.
  mysql_replication: mode=getslave
  ignore_errors: true
  register: slave
  when: >
    freebsd_mysql_replication_role == 'slave'
    and (freebsd_mysql_replication_master != '')

- name: Check master replication status.
  mysql_replication: mode=getmaster
  delegate_to: "{{ freebsd_mysql_replication_master }}"
  register: master
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (freebsd_mysql_replication_role == 'slave')
    and (freebsd_mysql_replication_master != '')

- name: Configure replication on the slave.
  mysql_replication:
    mode: changemaster
    master_host: "{{ freebsd_mysql_replication_master }}"
    master_user: "{{ freebsd_mysql_replication_user.name }}"
    master_password: "{{ freebsd_mysql_replication_user.password }}"
    master_auto_position: yes
  ignore_errors: True
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (freebsd_mysql_replication_role == 'slave')
    and (freebsd_mysql_replication_master != '')
    and freebsd_mysql_replication_user

- name: Start replication.
  mysql_replication: mode=startslave
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (freebsd_mysql_replication_role == 'slave')
    and (freebsd_mysql_replication_master != '')
